let SessionLoad = 1
if &cp | set nocp | endif
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/MySceal/backend/project
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +2 images/query/search.py
badd +61 images/query/search_utils.py
badd +13 images/nlp_utils/extract_info.py
badd +119 images/nlp_utils/visual.py
badd +127 images/nlp_utils/types.py
badd +259 images/nlp_utils/es_utils.py
badd +374 images/nlp_utils/time.py
badd +534 images/query/es.py
badd +691 ~/.cache/pyright-python/1.1.356/node_modules/pyright/dist/typeshed-fallback/stdlib/typing.pyi
badd +8 images/configs.py
badd +8 start.sh
badd +24 images/routers.py
badd +21 images/query/qa.py
badd +69 ~/.conda/envs/main/lib/python3.8/site-packages/transformers/__init__.py
badd +59 images/FrozenBiLM/model/__init__.py
badd +59 ~/.conda/envs/main/lib/python3.8/site-packages/torch/_C/__init__.pyi
badd +3 results/models.py
badd +1 images/query/common_nn.py
badd +12 images/nlp_utils/common.py
badd +21 images/views.py
badd +51 ~/.conda/envs/main/lib/python3.8/site-packages/django/http/__init__.py
badd +35 ~/.cache/pyright-python/1.1.356/node_modules/pyright/dist/typeshed-fallback/stubs/requests/requests/__init__.pyi
badd +112 ~/.cache/pyright-python/1.1.356/node_modules/pyright/dist/typeshed-fallback/stubs/requests/requests/models.pyi
badd +59 images/nlp_utils/location.py
badd +4 images/query/query_types.py
badd +5 project/views.py
badd +5 images/urls.py
badd +5 request.log
badd +18 mongodb_index.py
badd +1 .env
badd +2 results/utils.py
badd +4 results/database.py
argglobal
%argdel
$argadd images/query/search.py
edit results/utils.py
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd _ | wincmd |
split
1wincmd k
wincmd w
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe '1resize ' . ((&lines * 16 + 20) / 40)
exe 'vert 1resize ' . ((&columns * 102 + 104) / 208)
exe '2resize ' . ((&lines * 20 + 20) / 40)
exe 'vert 2resize ' . ((&columns * 102 + 104) / 208)
exe 'vert 3resize ' . ((&columns * 105 + 104) / 208)
argglobal
balt results/database.py
setlocal fdm=expr
setlocal fde=SimpylFold#FoldExpr(v:lnum)
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=2
setlocal fml=1
setlocal fdn=20
setlocal fen
7
normal! zo
let s:l = 6 - ((5 * winheight(0) + 8) / 16)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 6
normal! 0
wincmd w
argglobal
enew | setl bt=help
help session-file@en
balt results/utils.py
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal nofen
silent! normal! zE
let &fdl = &fdl
let s:l = 1358 - ((12 * winheight(0) + 10) / 20)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 1358
normal! 032|
wincmd w
argglobal
if bufexists(fnamemodify("images/query/search_utils.py", ":p")) | buffer images/query/search_utils.py | else | edit images/query/search_utils.py | endif
balt images/nlp_utils/types.py
setlocal fdm=manual
setlocal fde=SimpylFold#FoldExpr(v:lnum)
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
1,8fold
15,19fold
22,29fold
33,35fold
32,57fold
61,63fold
60,100fold
103,128fold
let &fdl = &fdl
60
normal! zo
61
normal! zo
let s:l = 81 - ((51 * winheight(0) + 18) / 37)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 81
normal! 028|
wincmd w
2wincmd w
exe '1resize ' . ((&lines * 16 + 20) / 40)
exe 'vert 1resize ' . ((&columns * 102 + 104) / 208)
exe '2resize ' . ((&lines * 20 + 20) / 40)
exe 'vert 2resize ' . ((&columns * 102 + 104) / 208)
exe 'vert 3resize ' . ((&columns * 105 + 104) / 208)
tabnext 1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20
let &shortmess = s:shortmess_save
let &winminheight = s:save_winminheight
let &winminwidth = s:save_winminwidth
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
nohlsearch
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
